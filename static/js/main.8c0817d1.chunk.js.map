{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","id","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onAddContact","reset","this","onSubmit","form","label","title","input","type","onChange","pattern","required","button","Component","Filter","ContactListItem","contacts","onDeleteContact","item","contact","onClick","ContactList","list","map","App","data","filter","addContact","uuidv4","find","option","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normilizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevPops","console","log","setItem","stringify","visibleContacts","titlePhonebbok","titleContacts","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.8c0817d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Q6YT\",\"label\":\"ContactForm_label__2NoyH\",\"title\":\"ContactForm_title__-RKgO\",\"input\":\"ContactForm_input__28gCX\",\"button\":\"ContactForm_button__3Vjob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__39LR6\",\"contact\":\"ContactListItem_contact__1r7_e\",\"name\":\"ContactListItem_name__23cHO\",\"number\":\"ContactListItem_number__2h_68\",\"button\":\"ContactListItem_button__1cTnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1XvjU\",\"title\":\"Filter_title__27lZS\",\"input\":\"Filter_input__36xOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePhonebbok\":\"App_titlePhonebbok__32KkY\",\"titleContacts\":\"App_titleContacts__2nJMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2h3aC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__18_BE\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        id:''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        this.props.onAddContact(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        \r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={s.form}>\r\n                <label className={s.label}>\r\n                    <span className={s.title}>Name</span>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={s.label}>\r\n                    <span className={s.title}>Number</span>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//     name: PropTypes.string.isRequired,\r\n//     number: PropTypes.string.isRequired,\r\n//     contacts: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//             id: PropTypes.string.isRequired,\r\n//         })\r\n//     ),\r\n//     onChange: PropTypes.func.isRequired,\r\n//     onSubmit:PropTypes.func.isRequired\r\n// };\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.label}>\r\n        <span className={s.title}>Find contacts by name</span>\r\n        <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contacts, onDeleteContact }) => (\r\n    <div className={s.item}>\r\n        <p className={s.contact}>\r\n            <span className={s.name}>{contacts.name}:\r\n            </span>\r\n            <span className={s.number}>{contacts.number}\r\n            </span>\r\n        </p>\r\n        <button className={s.button} onClick={()=> onDeleteContact(contacts.id)}>Delete</button>\r\n    </div> \r\n)\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={s.list}>\r\n        {contacts.map((contacts)=> (\r\n            <li key={contacts.id}  >\r\n                 <ContactListItem contacts={contacts} onDeleteContact={onDeleteContact} />\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n\r\n ","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport data from '../../data/contacts.json'\nimport s from './App.module.css';\n\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nclass App extends Component {\n\n  state = {\n    contacts: data,\n    filter: ''\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    };\n    \n    if (contacts.find(option => option.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    \n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts]\n    }))\n  }\n  \n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts:prevState.contacts.filter(contact => contact.id !==contactId),\n    }))\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  }\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normilizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter));\n  }\n  \n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevPops, prevState) {\n    const { contacts} = this.state;\n    if (contacts !== prevState.contacts) {\n      console.log(\"Обновилось поле контактов\");\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <div>\n          <h1 className={s.titlePhonebbok}>Phonebook</h1>\n          <ContactForm onAddContact={this.addContact} />\n          <h2 className={s.titleContacts}>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\n//real DOM\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}